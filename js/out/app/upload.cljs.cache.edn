{:rename-macros {}, :renames {}, :externs {FileReader {}, Object {}, React {createElement {}}}, :use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name app.upload, :imports nil, :requires {validation app.validation, goog.labs.format.csv goog.labs.format.csv, async cljs.core.async, csv goog.labs.format.csv, rum.core rum.core, rum rum.core, app.validation app.validation, cljs.core.async cljs.core.async, app.common app.common, common app.common}, :uses {<! cljs.core.async, close! cljs.core.async, chan cljs.core.async, >! cljs.core.async, put! cljs.core.async, take! cljs.core.async}, :defs {first-file {:name app.upload/first-file, :file "src\\app\\upload.cljs", :line 10, :column 1, :end-line 10, :end-column 16, :meta {:file "C:\\Users\\Julec\\Desktop\\a\\myAppTest\\src\\app\\upload.cljs", :line 10, :column 6, :end-line 10, :end-column 16}, :tag any}, extract-result {:name app.upload/extract-result, :file "src\\app\\upload.cljs", :line 17, :column 1, :end-line 17, :end-column 20, :meta {:file "C:\\Users\\Julec\\Desktop\\a\\myAppTest\\src\\app\\upload.cljs", :line 17, :column 6, :end-line 17, :end-column 20}, :tag any}, upload-reqs {:name app.upload/upload-reqs, :file "src\\app\\upload.cljs", :line 20, :column 1, :end-line 20, :end-column 17, :meta {:file "C:\\Users\\Julec\\Desktop\\a\\myAppTest\\src\\app\\upload.cljs", :line 20, :column 6, :end-line 20, :end-column 17}, :tag any}, file-reads {:name app.upload/file-reads, :file "src\\app\\upload.cljs", :line 21, :column 1, :end-line 21, :end-column 16, :meta {:file "C:\\Users\\Julec\\Desktop\\a\\myAppTest\\src\\app\\upload.cljs", :line 21, :column 6, :end-line 21, :end-column 16}, :tag any}, handle-change {:protocol-inline nil, :meta {:file "C:\\Users\\Julec\\Desktop\\a\\myAppTest\\src\\app\\upload.cljs", :line 23, :column 7, :end-line 23, :end-column 20, :arglists (quote ([e]))}, :name app.upload/handle-change, :variadic false, :file "src\\app\\upload.cljs", :end-column 20, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, input-upload {:name app.upload/input-upload, :file "src\\app\\upload.cljs", :line 73, :column 1, :end-line 73, :end-column 23, :arglists (quote ([error-msg])), :meta {:file "C:\\Users\\Julec\\Desktop\\a\\myAppTest\\src\\app\\upload.cljs", :line 73, :column 11, :end-line 73, :end-column 23, :arglists (quote ([error-msg]))}, :tag any}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, rum rum.core, rum.core rum.core, async cljs.core.async, cljs.core.async cljs.core.async}, :cljs.analyzer/constants {:seen #{:file-content :else :recur :file-name :file-error}, :order [:recur :file-name :file-error :else :file-content]}, :doc nil}